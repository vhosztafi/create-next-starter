name: Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - alpha
          - beta
          - rc

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '8.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        run: |
          cd packages/create-next-starter
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build package
        run: pnpm --filter @solutioniser/create-next-starter run build

      - name: Publish to npm
        run: |
          cd packages/create-next-starter
          npm publish --access public

      - name: Commit changes
        run: |
          git add packages/create-next-starter/package.json packages/create-next-starter/dist
          git commit -m "chore(release): bump version to ${{ env.NEW_VERSION }}"
          git tag "v${{ env.NEW_VERSION }}"
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ env.NEW_VERSION }}'
          release_name: 'Release v${{ env.NEW_VERSION }}'
          body: |
            ## Changes in v${{ env.NEW_VERSION }}

            This release includes:
            - Bug fixes and improvements
            - Updated dependencies

            ## Installation

            ```bash
            npm create @solutioniser/next-starter@latest
            ```
          draft: false
          prerelease: ${{ contains(env.NEW_VERSION, 'alpha') || contains(env.NEW_VERSION, 'beta') || contains(env.NEW_VERSION, 'rc') }}
